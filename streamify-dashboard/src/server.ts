import { createServer } from "miragejs";
import { Song } from "./lib/types";
// import { Song } from "./lib/types";
// Define the Artist type
// type Artist = {
//   name: string;
//   image: string;
// };

// // Define the Revenue type for songs
// type Revenue = {
//   totalRevenue: number; // Total revenue generated by the song
//   costPerStream: number; // Revenue per stream
//   revenueStreams: number; // Number of streams that contributed to revenue
// };

// // Define the common Song type
// type Song = {
//   id: string; // Unique identifier for the song
//   title: string; // Song title
//   artist: Artist; // Artist information
//   album?: string; // Optional album field
//   image: string; // Song image or thumbnail
//   time: string; // Duration of the song
//   streamCount: number; // Total number of streams
//   userId?: string; // Optional field to associate a user with the song
//   date: string; // Date when the song was uploaded or streamed
//   revenue?: Revenue; // Optional revenue information if relevant
//   search?: number;
// };

// Refactor the song data array using the new Song type
const songData: Song[] = [
  {
    id: "song_001",
    title: "Vocal Studies and Uprock Narratives",
    artist: { name: "Prefuse 73", image: "./image4.png" },
    image: "./image4.png",
    time: "03:37",
    streamCount: 5000,
    userId: "user_002",
    date: "2024-09-28",
    search: 4000,
    revenue: 50000,
  },
  {
    id: "song_002",
    title: "Temples",
    artist: { name: "Lone", image: "./image1.jpg" },
    image: "./image1.jpg",
    time: "04:45",
    streamCount: 6000,
    userId: "user_002",
    date: "2024-09-28",
    search: 6000,
    revenue: 10000,
  },
  {
    id: "song_003",
    title: "Earth Tones",
    artist: { name: "Lenzman", image: "./iimage2.jpg" },
    image: "./iimage2.jpg",
    time: "03:23",
    streamCount: 7000,
    userId: "user_002",
    date: "2024-09-28",
    revenue: 50000,
    search: 8000,
  },
  {
    id: "song_004",
    title: "Kollections 06",
    artist: { name: "VA", image: "./image3.jpeg" },
    image: "./image3.jpeg",
    time: "05:12",
    streamCount: 6500,
    userId: "user_002",
    date: "2024-09-28",
    search: 7000,
    revenue: 50000,
  },
  {
    id: "song_005",
    title: "Blinding Lights",
    artist: { name: "The Weeknd", image: "./image5.jpg" },
    image: "./image5.jpg",
    time: "03:20",
    streamCount: 2500,
    userId: "user_002",
    date: "2024-09-28",
    revenue: 50000,
    search: 10000,
  },
  {
    id: "song_006",
    title: "Levitating",
    artist: { name: "Dua Lipa", image: "./dua.jpg" },
    image: "./dua.jpg",
    time: "03:23",
    streamCount: 7300,
    userId: "user_003",
    date: "2024-09-27",
    revenue: 60000,
    search: 8000,
  },
  {
    id: "song_007",
    title: "Good 4 U",
    artist: { name: "Olivia Rodrigo", image: "./image7.jpg" },
    image: "./image7.jpg",
    time: "02:58",
    streamCount: 7100,
    userId: "user_006",
    date: "2024-09-24",
    revenue: 80000,
    search: 18000,
  },
  {
    id: "song_008",
    title: "Peaches",
    artist: { name: "Justin Bieber", image: "./image8.jpg" },
    image: "./image8.jpg",
    time: "03:18",
    streamCount: 8800,
    userId: "user_008",
    date: "2024-09-22",
    revenue: 90000,
    search: 20000,
  },
  {
    id: "song_009",
    title: "Watermelon Sugar",
    artist: { name: "Harry Styles", image: "./harry.jpeg" },
    image: "./harry.jpeg",
    time: "03:21",
    streamCount: 1800,
    userId: "user_004",
    date: "2024-09-26",
    revenue: 100000,
    search: 30000,
  },
  {
    id: "song_010",
    title: "Shape of You",
    artist: { name: "Ed Sheeran", image: "./image10.jpg" },
    image: "./image10.jpg",
    time: "03:53",
    streamCount: 3000,
    userId: "user_005",
    date: "2024-09-25",
    search: 12000,
    revenue: 50000,
  },
  {
    id: "song_011",
    title: "Stay",
    artist: { name: "The Kid LAROI & Justin Bieber", image: "./image11.jpg" },
    image: "./image11.jpg",
    time: "02:21",
    streamCount: 3200,
    userId: "user_007",
    date: "2024-09-23",
    revenue: 6000,
    search: 15000,
  },
  {
    id: "song_012",
    title: "drivers license",
    artist: { name: "Olivia Rodrigo", image: "./image12.jpg" },
    image: "./image12.jpg",
    time: "04:02",
    streamCount: 2700,
    userId: "user_009",
    date: "2024-09-21",
    search: 11000,
    revenue: 70000,
  },
  {
    id: "song_013",
    title: "Save Your Tears",
    artist: { name: "The Weeknd", image: "./the_weeknd.jpg" },
    image: "./the_weeknd.jpg",
    time: "03:35",
    streamCount: 8900,
    userId: "user_010",
    date: "2024-09-20",
    revenue: 90000,
    search: 13000,
  },
  {
    id: "song_014",
    title: "Deja Vu",
    artist: { name: "Olivia Rodrigo", image: "./image14.jpg" },
    image: "./image14.jpg",
    time: "03:35",
    streamCount: 2200,
    userId: "user_011",
    date: "2024-09-19",
    search: 10000,
    revenue: 70000,
  },
  {
    id: "song_015",
    title: "Montero (Call Me By Your Name)",
    artist: { name: "Lil Nas X", image: "./image15.jpg" },
    image: "./image15.jpg",
    time: "02:17",
    streamCount: 3400,
    userId: "user_012",
    date: "2024-09-18",
    search: 6000,
    revenue: 7000,
  },
  {
    id: "song_016",
    title: "Butter",
    artist: { name: "BTS", image: "./bts.jpeg" },
    image: "./bts.jpeg",
    time: "02:44",
    streamCount: 4500,
    userId: "user_013",
    date: "2024-09-17",
    revenue: 160000,
    search: 13000,
  },
  {
    id: "song_017",
    title: "Kiss Me More",
    artist: { name: "Doja Cat ft. SZA", image: "./doza.jpeg" },
    image: "./doza.jpeg",
    time: "03:28",
    streamCount: 2600,
    userId: "user_014",
    date: "2024-09-16",
    search: 50000,
    revenue: 90000,
  },
  {
    id: "song_018",
    title: "Levitating (feat. DaBaby)",
    artist: { name: "Dua Lipa", image: "./dua.jpg" },
    image: "./dua.jpg",
    time: "03:23",
    streamCount: 3500,
    userId: "user_015",
    date: "2024-09-15",
    revenue: 120000,
    search: 10000,
  },
  {
    id: "song_019",
    title: "Mad Love",
    artist: { name: "Mabel", image: "./mable.jpg" },
    image: "./mable.jpg",
    time: "02:49",
    streamCount: 1500,
    userId: "user_001",
    date: "2024-09-29",
    search: 18000,
    revenue: 50000,
  },
];

export const userGrowthData = [
  { month: "Jan", totalUsers: 800000, activeUsers: 600000 },
  { month: "Feb", totalUsers: 850000, activeUsers: 650000 },
  { month: "Mar", totalUsers: 900000, activeUsers: 700000 },
  { month: "Apr", totalUsers: 950000, activeUsers: 725000 },
  { month: "May", totalUsers: 1000000, activeUsers: 750000 },
  { month: "Jun", totalUsers: 1050000, activeUsers: 780000 },
  { month: "Jul", totalUsers: 1100000, activeUsers: 800000 },
  { month: "Aug", totalUsers: 1150000, activeUsers: 820000 },
  { month: "Sep", totalUsers: 1200000, activeUsers: 850000 },
  { month: "Oct", totalUsers: 1250000, activeUsers: 880000 },
  { month: "Nov", totalUsers: 1300000, activeUsers: 900000 },
  { month: "Dec", totalUsers: 1350000, activeUsers: 950000 },
];

export const keyMetrics = {
  totalUsers: 1350000,
  activeUsers: 950000,
  newUsers: 50000,
  totalStreams: 1250000,
  // topArtist: [
  //   {
  //     name: "Taylor Swift",
  //     image: "./taylor.png",
  //     streams: 150000,
  //   },
  //   {
  //     name: "Harry Styles",
  //     image: "./harry.jpeg",
  //     streams: 120000,
  //   },
  //   {
  //     name: "Ed Sheeran",
  //     image: "./ed.jpeg",
  //     streams: 100000,
  //   },
  //   {
  //     name: "Drake",
  //     image: "./drake.jpeg",
  //     streams: 80000,
  //   },
  //   {
  //     name: "Travis Scott",
  //     image: "./travis.jpeg",
  //     streams: 75000,
  //   },
  //   {
  //     name: "The Weeknd",
  //     image: "./the_weeknd.jpg",
  //     streams: 90000,
  //   },
  // ],
  // mostSearchedSongs: [
  //   {
  //     title: "Anti-Hero",
  //     artist: "Taylor Swift",
  //     streams: 150000,
  //     image: "./taylor.png",
  //   },
  //   {
  //     title: "As It was",
  //     artist: "Harry Styles",
  //     streams: 100000,
  //     image: "./harry.jpeg",
  //   },
  //   {
  //     title: "Blinding Lights",
  //     artist: "The Weeknd",
  //     streams: 160000,
  //     image: "./the_weeknd.jpg",
  //   },
  //   {
  //     title: "Lover",
  //     artist: "Taylor Swift",
  //     streams: 70000,
  //     image: "./taylor.png",
  //   },
  //   {
  //     title: "Lavitating",
  //     artist: "Dua Lipa",
  //     streams: 50000,
  //     image: "./dua.jpg",
  //   },
  // ],
};

// const topRevenueGeneratingSongs = [
//   {
//     title: "Blinding Lights",
//     artist: "The Weeknd",
//     revenue: 50000,
//     image: "./the_weeknd.jpg",
//   },
//   {
//     song: "Levitating",
//     artist: "Dua Lipa",
//     revenue: 45000,
//     image: "./dua.jpg",
//   },
// ];

// const topRevenueGeneratingArtists = [
//   { artist: "Ed Sheeran", revenue: 150000, image: "./ed.jpeg" },
//   { artist: "Taylor Swift", revenue: 120000, image: "./taylor.png" },
// ];

const revenueData = {
  // totalUsers: 1350000, // Total user base
  totalAggregate: 1731000, // Total revenue across all months
  projectedRevenue: 1800000, // Expected revenue for the year
  profit: 550000, // Total profit for the year in dollars
  profitMargin: ((550000 / 1731000) * 100).toFixed(2) + "%", // Profit margin calculation
  revenuePerUser: (1731000 / 1350000).toFixed(2), // Average revenue per user (ARPU)
  monthlyBreakdown: [
    {
      month: "January",
      subscriptions: 60000,
      ads: 25000,
      inAppPurchases: 4000,
      promotions: 8000,
      affiliateCommissions: 1500,
      totalRevenue: 98500,
    },
    {
      month: "February",
      subscriptions: 64000,
      ads: 27000,
      inAppPurchases: 4500,
      promotions: 10000,
      affiliateCommissions: 2000,
      totalRevenue: 107500,
    },
    {
      month: "March",
      subscriptions: 68000,
      ads: 29000,
      inAppPurchases: 5000,
      promotions: 11000,
      affiliateCommissions: 2200,
      totalRevenue: 115200,
    },
    {
      month: "April",
      subscriptions: 70000,
      ads: 32000,
      inAppPurchases: 5500,
      promotions: 12000,
      affiliateCommissions: 2500,
      totalRevenue: 127000,
    },
    {
      month: "May",
      subscriptions: 74000,
      ads: 33000,
      inAppPurchases: 6000,
      promotions: 13000,
      affiliateCommissions: 2700,
      totalRevenue: 128700,
    },
    {
      month: "June",
      subscriptions: 78000,
      ads: 35000,
      inAppPurchases: 6500,
      promotions: 14000,
      affiliateCommissions: 3000,
      totalRevenue: 136500,
    },
    {
      month: "July",
      subscriptions: 82000,
      ads: 38000,
      inAppPurchases: 7000,
      promotions: 15000,
      affiliateCommissions: 3500,
      totalRevenue: 145500,
    },
    {
      month: "August",
      subscriptions: 85000,
      ads: 40000,
      inAppPurchases: 7500,
      promotions: 16000,
      affiliateCommissions: 4000,
      totalRevenue: 157500,
    },
    {
      month: "September",
      subscriptions: 89000,
      ads: 42000,
      inAppPurchases: 8000,
      promotions: 17000,
      affiliateCommissions: 4500,
      totalRevenue: 170500,
    },
    {
      month: "October",
      subscriptions: 91000,
      ads: 44000,
      inAppPurchases: 8500,
      promotions: 18000,
      affiliateCommissions: 5000,
      totalRevenue: 181500,
    },
    {
      month: "November",
      subscriptions: 94000,
      ads: 45000,
      inAppPurchases: 9000,
      promotions: 20000,
      affiliateCommissions: 5500,
      totalRevenue: 193500,
    },
    {
      month: "December",
      subscriptions: 98000,
      ads: 46000,
      inAppPurchases: 10000,
      promotions: 22000,
      affiliateCommissions: 6000,
      totalRevenue: 203600,
    },
  ],
  topPerformingRegions: [
    { region: "North America", revenue: 450000 },
    { region: "Europe", revenue: 300000 },
    { region: "Asia", revenue: 200000 },
  ],
};

function getRandomSongs(songs: Song[], count = 5) {
  const shuffled = songs.sort(() => 0.5 - Math.random());
  return shuffled.slice(0, count);
}

async function getTopArtists(songs: Song[], count = 6) {
  const topArtists = songs
    .map((song) => {
      const total = (song.revenue ?? 0) + (song.search ?? 0);
      return { ...song, total };
    })
    .sort((a, b) => b.total - a.total)
    .slice(0, count);

  console.log("topArtist", topArtists);
  return topArtists;
}
export function makeServer() {
  createServer({
    routes() {
      this.get("/api/hello", () => {
        return { message: "Hello World!" };
      });
      this.get("/api/top-songs", () => {
        const randomSongs = getRandomSongs(songData);

        return {
          songs: songData
            .sort((a, b) => b.streamCount - a.streamCount)
            .slice(0, 8),
          trendingSongs: randomSongs,
        };
      });

      this.get("/api/key-matrics", () => {
        return {
          keyMetrics: {
            totalUsers: keyMetrics.totalUsers,
            activeUsers: keyMetrics.activeUsers,
            newUsers: keyMetrics.newUsers,
          },
          userGrowthData: userGrowthData,
        };
      });

      this.get("/api/stream-matrics", async () => {
        return {
          totalStreams: keyMetrics.totalStreams,
          topArtist: await getTopArtists(songData),
          mostSearchedSongs: songData
            .sort((a, b) => b.search - a.search)
            .slice(0, 5),
          recentStreams: songData,
        };
      });

      this.get("/api/revenue-matrics", () => {
        return {
          revenueData: revenueData,
          topRevenueGeneratingArtists: topRevenueGeneratingArtists,
          topRevenueGeneratingSongs: topRevenueGeneratingSongs,
        };
      });
    },
  });
}
